(define (domain domainpddl)
(:requirements :equality :typing :conditional-effects :negative-preconditions)
(:types object)
(:predicates
    (holdinga)
    (clearb)
    (cleara)
    (onab)
    (handempty)
    (holdingb)
    (clearc)
    (onbc)
    (holdingc)
    (cleard)
    (oncd)
    (ontablea)
    (ontableb)
    (oncb)
    (ontabled)
)
    (:action stackab
    :parameters()
    :precondition (and  (holdinga)  (clearb) )
    :effect(and  (cleara)  (onab)  (handempty)  (not (holdinga))  (not (clearb)) )
)
    (:action stackbc
    :parameters()
    :precondition (and  (holdingb)  (clearc) )
    :effect(and  (clearb)  (handempty)  (onbc)  (not (holdingb))  (not (clearc)) )
)
    (:action stackcd
    :parameters()
    :precondition (and  (holdingc)  (cleard) )
    :effect(and  (oncd)  (clearc)  (handempty)  (not (cleard))  (not (holdingc)) )
)
    (:action pick-upa
    :parameters()
    :precondition (and  (cleara)  (ontablea)  (handempty) )
    :effect(and  (holdinga)  (not (ontablea))  (not (cleara))  (not (handempty)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
    (:action unstackcb
    :parameters()
    :precondition (and  (oncb)  (clearc)  (handempty) )
    :effect(and  (clearb)  (holdingc)  (not (clearc))  (not (oncb))  (not (handempty)) )
)
)(define (domain domainpddl)
(:requirements :equality :typing :conditional-effects :negative-preconditions)
(:types object)
(:predicates
    (holdinga)
    (clearb)
    (cleara)
    (onab)
    (handempty)
    (holdingb)
    (clearc)
    (onbc)
    (holdingc)
    (cleard)
    (oncd)
    (ontablea)
    (ontableb)
    (oncb)
    (ontabled)
)
    (:action stackab
    :parameters()
    :precondition (and  (holdinga)  (clearb) )
    :effect(and  (cleara)  (onab)  (handempty)  (not (holdinga))  (not (clearb)) )
)
    (:action stackbc
    :parameters()
    :precondition (and  (holdingb)  (clearc) )
    :effect(and  (clearb)  (handempty)  (onbc)  (not (holdingb))  (not (clearc)) )
)
    (:action stackcd
    :parameters()
    :precondition (and  (holdingc)  (cleard) )
    :effect(and  (oncd)  (clearc)  (handempty)  (not (cleard))  (not (holdingc)) )
)
    (:action pick-upa
    :parameters()
    :precondition (and  (cleara)  (ontablea)  (handempty) )
    :effect(and  (holdinga)  (not (ontablea))  (not (cleara))  (not (handempty)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
    (:action unstackcb
    :parameters()
    :precondition (and  (oncb)  (clearc)  (handempty) )
    :effect(and  (clearb)  (holdingc)  (not (clearc))  (not (oncb))  (not (handempty)) )
)
)