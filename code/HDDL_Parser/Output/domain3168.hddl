(define (domain unnamedDomain)
(:requirements :equality :typing :conditional-effects :negative-preconditions)
(:types object)
(:predicates
    (holdingd)
    (clearc)
    (ondc)
    (handempty)
    (cleard)
    (holdingc)
    (clearb)
    (oncb)
    (holdingb)
    (cleara)
    (onba)
    (ontabled)
    (ontablec)
    (ontableb)
    (ontablea)
)
    (:action stackdc
    :parameters()
    :precondition (and  (holdingd)  (clearc) )
    :effect(and  (ondc)  (handempty)  (cleard)  (not (clearc))  (not (holdingd)) )
)
    (:action stackcb
    :parameters()
    :precondition (and  (holdingc)  (clearb) )
    :effect(and  (clearc)  (handempty)  (oncb)  (not (clearb))  (not (holdingc)) )
)
    (:action stackba
    :parameters()
    :precondition (and  (holdingb)  (cleara) )
    :effect(and  (clearb)  (onba)  (handempty)  (not (holdingb))  (not (cleara)) )
)
    (:action pick-upd
    :parameters()
    :precondition (and  (cleard)  (ontabled)  (handempty) )
    :effect(and  (holdingd)  (not (ontabled))  (not (cleard))  (not (handempty)) )
)
    (:action pick-upc
    :parameters()
    :precondition (and  (clearc)  (ontablec)  (handempty) )
    :effect(and  (holdingc)  (not (ontablec))  (not (clearc))  (not (handempty)) )
)
    (:action put-downc
    :parameters()
    :precondition (and  (holdingc) )
    :effect(and  (clearc)  (handempty)  (ontablec)  (not (holdingc)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
    (:action put-downb
    :parameters()
    :precondition (and  (holdingb) )
    :effect(and  (clearb)  (handempty)  (ontableb)  (not (holdingb)) )
)
    (:action pick-upc
    :parameters()
    :precondition (and  (clearc)  (ontablec)  (handempty) )
    :effect(and  (holdingc)  (not (ontablec))  (not (clearc))  (not (handempty)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
)(define (domain unnamedDomain)
(:requirements :equality :typing :conditional-effects :negative-preconditions)
(:types object)
(:predicates
    (holdingd)
    (clearc)
    (ondc)
    (handempty)
    (cleard)
    (holdingc)
    (clearb)
    (oncb)
    (holdingb)
    (cleara)
    (onba)
    (ontabled)
    (ontablec)
    (ontableb)
    (ontablea)
)
    (:action stackdc
    :parameters()
    :precondition (and  (holdingd)  (clearc) )
    :effect(and  (ondc)  (handempty)  (cleard)  (not (clearc))  (not (holdingd)) )
)
    (:action stackcb
    :parameters()
    :precondition (and  (holdingc)  (clearb) )
    :effect(and  (clearc)  (handempty)  (oncb)  (not (clearb))  (not (holdingc)) )
)
    (:action stackba
    :parameters()
    :precondition (and  (holdingb)  (cleara) )
    :effect(and  (clearb)  (onba)  (handempty)  (not (holdingb))  (not (cleara)) )
)
    (:action pick-upd
    :parameters()
    :precondition (and  (cleard)  (ontabled)  (handempty) )
    :effect(and  (holdingd)  (not (ontabled))  (not (cleard))  (not (handempty)) )
)
    (:action pick-upc
    :parameters()
    :precondition (and  (clearc)  (ontablec)  (handempty) )
    :effect(and  (holdingc)  (not (ontablec))  (not (clearc))  (not (handempty)) )
)
    (:action put-downc
    :parameters()
    :precondition (and  (holdingc) )
    :effect(and  (clearc)  (handempty)  (ontablec)  (not (holdingc)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
    (:action put-downb
    :parameters()
    :precondition (and  (holdingb) )
    :effect(and  (clearb)  (handempty)  (ontableb)  (not (holdingb)) )
)
    (:action pick-upc
    :parameters()
    :precondition (and  (clearc)  (ontablec)  (handempty) )
    :effect(and  (holdingc)  (not (ontablec))  (not (clearc))  (not (handempty)) )
)
    (:action pick-upb
    :parameters()
    :precondition (and  (clearb)  (ontableb)  (handempty) )
    :effect(and  (holdingb)  (not (ontableb))  (not (clearb))  (not (handempty)) )
)
)